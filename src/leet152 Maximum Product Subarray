/*
  https://leetcode.com/problems/maximum-product-subarray/
  Find the contiguous subarray within an array (containing at least one number) which has the largest product.
  
  For example, given the array [2,3,-2,4],
  the contiguous subarray [2,3] has the largest product = 6.
*/

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if(nums.size() == 0){
            return 0;
        }else if(nums.size() == 1){
            return nums[0];
        }
        
        int posmax = max(0, nums[0]);
        int negmax = min(0, nums[0]);
        int maxix = posmax;
        for(int i = 1 ; i < nums.size() ; ++i){
            if(nums[i] > 0){
                posmax = max(1, posmax) * nums[i];
                negmax = negmax * nums[i];
            }else if( nums[i] < 0){
                int temp = negmax;
                negmax = max(1, posmax) * nums[i];
                posmax = temp * nums[i];
            }else{
                posmax = negmax = 0;
            }
            if(maxix < posmax) maxix = posmax;
        }
        return maxix;
    }
};

